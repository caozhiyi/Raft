// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_rpc.proto

#ifndef PROTOBUF_INCLUDED_client_5frpc_2eproto
#define PROTOBUF_INCLUDED_client_5frpc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_client_5frpc_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_client_5frpc_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_client_5frpc_2eproto();
namespace raft_rpc {
class ClientRequest;
class ClientRequestDefaultTypeInternal;
extern ClientRequestDefaultTypeInternal _ClientRequest_default_instance_;
class ClientResponse;
class ClientResponseDefaultTypeInternal;
extern ClientResponseDefaultTypeInternal _ClientResponse_default_instance_;
}  // namespace raft_rpc
namespace google {
namespace protobuf {
template<> ::raft_rpc::ClientRequest* Arena::CreateMaybeMessage<::raft_rpc::ClientRequest>(Arena*);
template<> ::raft_rpc::ClientResponse* Arena::CreateMaybeMessage<::raft_rpc::ClientResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace raft_rpc {

// ===================================================================

class ClientRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_rpc.ClientRequest) */ {
 public:
  ClientRequest();
  virtual ~ClientRequest();

  ClientRequest(const ClientRequest& from);

  inline ClientRequest& operator=(const ClientRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientRequest(ClientRequest&& from) noexcept
    : ClientRequest() {
    *this = ::std::move(from);
  }

  inline ClientRequest& operator=(ClientRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ClientRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientRequest* internal_default_instance() {
    return reinterpret_cast<const ClientRequest*>(
               &_ClientRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ClientRequest* other);
  friend void swap(ClientRequest& a, ClientRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientRequest* New() const final {
    return CreateMaybeMessage<ClientRequest>(nullptr);
  }

  ClientRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClientRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClientRequest& from);
  void MergeFrom(const ClientRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:raft_rpc.ClientRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct ::TableStruct_client_5frpc_2eproto;
};
// -------------------------------------------------------------------

class ClientResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_rpc.ClientResponse) */ {
 public:
  ClientResponse();
  virtual ~ClientResponse();

  ClientResponse(const ClientResponse& from);

  inline ClientResponse& operator=(const ClientResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientResponse(ClientResponse&& from) noexcept
    : ClientResponse() {
    *this = ::std::move(from);
  }

  inline ClientResponse& operator=(ClientResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ClientResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientResponse* internal_default_instance() {
    return reinterpret_cast<const ClientResponse*>(
               &_ClientResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ClientResponse* other);
  friend void swap(ClientResponse& a, ClientResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientResponse* New() const final {
    return CreateMaybeMessage<ClientResponse>(nullptr);
  }

  ClientResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClientResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClientResponse& from);
  void MergeFrom(const ClientResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string des = 2;
  bool has_des() const;
  void clear_des();
  static const int kDesFieldNumber = 2;
  const ::std::string& des() const;
  void set_des(const ::std::string& value);
  #if LANG_CXX11
  void set_des(::std::string&& value);
  #endif
  void set_des(const char* value);
  void set_des(const char* value, size_t size);
  ::std::string* mutable_des();
  ::std::string* release_des();
  void set_allocated_des(::std::string* des);

  // required int32 err_code = 1;
  bool has_err_code() const;
  void clear_err_code();
  static const int kErrCodeFieldNumber = 1;
  ::google::protobuf::int32 err_code() const;
  void set_err_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:raft_rpc.ClientResponse)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr des_;
  ::google::protobuf::int32 err_code_;
  friend struct ::TableStruct_client_5frpc_2eproto;
};
// ===================================================================

class ClientService_Stub;

class ClientService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ClientService() {};
 public:
  virtual ~ClientService();

  typedef ClientService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void client_msg(::google::protobuf::RpcController* controller,
                       const ::raft_rpc::ClientRequest* request,
                       ::raft_rpc::ClientResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ClientService);
};

class ClientService_Stub : public ClientService {
 public:
  ClientService_Stub(::google::protobuf::RpcChannel* channel);
  ClientService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ClientService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ClientService ------------------------------------------

  void client_msg(::google::protobuf::RpcController* controller,
                       const ::raft_rpc::ClientRequest* request,
                       ::raft_rpc::ClientResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ClientService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientRequest

// required string msg = 1;
inline bool ClientRequest::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientRequest::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ClientRequest::msg() const {
  // @@protoc_insertion_point(field_get:raft_rpc.ClientRequest.msg)
  return msg_.GetNoArena();
}
inline void ClientRequest::set_msg(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_rpc.ClientRequest.msg)
}
#if LANG_CXX11
inline void ClientRequest::set_msg(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_rpc.ClientRequest.msg)
}
#endif
inline void ClientRequest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_rpc.ClientRequest.msg)
}
inline void ClientRequest::set_msg(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_rpc.ClientRequest.msg)
}
inline ::std::string* ClientRequest::mutable_msg() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:raft_rpc.ClientRequest.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientRequest::release_msg() {
  // @@protoc_insertion_point(field_release:raft_rpc.ClientRequest.msg)
  if (!has_msg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return msg_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientRequest::set_allocated_msg(::std::string* msg) {
  if (msg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:raft_rpc.ClientRequest.msg)
}

// -------------------------------------------------------------------

// ClientResponse

// required int32 err_code = 1;
inline bool ClientResponse::has_err_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientResponse::clear_err_code() {
  err_code_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 ClientResponse::err_code() const {
  // @@protoc_insertion_point(field_get:raft_rpc.ClientResponse.err_code)
  return err_code_;
}
inline void ClientResponse::set_err_code(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  err_code_ = value;
  // @@protoc_insertion_point(field_set:raft_rpc.ClientResponse.err_code)
}

// required string des = 2;
inline bool ClientResponse::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientResponse::clear_des() {
  des_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ClientResponse::des() const {
  // @@protoc_insertion_point(field_get:raft_rpc.ClientResponse.des)
  return des_.GetNoArena();
}
inline void ClientResponse::set_des(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_rpc.ClientResponse.des)
}
#if LANG_CXX11
inline void ClientResponse::set_des(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  des_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_rpc.ClientResponse.des)
}
#endif
inline void ClientResponse::set_des(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_rpc.ClientResponse.des)
}
inline void ClientResponse::set_des(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_rpc.ClientResponse.des)
}
inline ::std::string* ClientResponse::mutable_des() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:raft_rpc.ClientResponse.des)
  return des_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientResponse::release_des() {
  // @@protoc_insertion_point(field_release:raft_rpc.ClientResponse.des)
  if (!has_des()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return des_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientResponse::set_allocated_des(::std::string* des) {
  if (des != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  des_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), des);
  // @@protoc_insertion_point(field_set_allocated:raft_rpc.ClientResponse.des)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace raft_rpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_client_5frpc_2eproto
