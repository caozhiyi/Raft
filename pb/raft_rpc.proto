syntax = 'proto2';
package raft;
option cc_generic_services = true;

message HeartRequest {
    required sfixed64   version  = 1;          // last version in file
    repeated string     msg      = 2;          // client msg
    optional bool       done_msg = 3;          // write the msg of priv heart to file
};

message HeartResponse {
    required sfixed64   version    = 1;        // cur node newest version
};

message VoteResuest {
	required sfixed64   version    = 1;        // cur node newest version
};

message VoteToResponse {
    required bool vote           = 1;          // is voting
};

message NodeInfoRequest {
    repeated string ip_port      = 1;          // all node ip info
}

message NodeInfoResponse {
    repeated string ip_port      = 1;          // all node ip info
}

service RaftService {

    rpc rpc_heart(HeartRequest) returns (HeartResponse);

    rpc rpc_vote(VoteResuest) returns (VoteToResponse);

    rpc rpc_node_info(NodeInfoRequest) returns (NodeInfoResponse);
};