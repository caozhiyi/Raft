// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft_rpc.proto

#ifndef PROTOBUF_INCLUDED_raft_5frpc_2eproto
#define PROTOBUF_INCLUDED_raft_5frpc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_raft_5frpc_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_raft_5frpc_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_raft_5frpc_2eproto();
namespace raft_rpc {
class HeartRequest;
class HeartRequestDefaultTypeInternal;
extern HeartRequestDefaultTypeInternal _HeartRequest_default_instance_;
class HeartResponse;
class HeartResponseDefaultTypeInternal;
extern HeartResponseDefaultTypeInternal _HeartResponse_default_instance_;
class SyncToResponse;
class SyncToResponseDefaultTypeInternal;
extern SyncToResponseDefaultTypeInternal _SyncToResponse_default_instance_;
class SyncToResuest;
class SyncToResuestDefaultTypeInternal;
extern SyncToResuestDefaultTypeInternal _SyncToResuest_default_instance_;
class VoteResuest;
class VoteResuestDefaultTypeInternal;
extern VoteResuestDefaultTypeInternal _VoteResuest_default_instance_;
class VoteToResponse;
class VoteToResponseDefaultTypeInternal;
extern VoteToResponseDefaultTypeInternal _VoteToResponse_default_instance_;
}  // namespace raft_rpc
namespace google {
namespace protobuf {
template<> ::raft_rpc::HeartRequest* Arena::CreateMaybeMessage<::raft_rpc::HeartRequest>(Arena*);
template<> ::raft_rpc::HeartResponse* Arena::CreateMaybeMessage<::raft_rpc::HeartResponse>(Arena*);
template<> ::raft_rpc::SyncToResponse* Arena::CreateMaybeMessage<::raft_rpc::SyncToResponse>(Arena*);
template<> ::raft_rpc::SyncToResuest* Arena::CreateMaybeMessage<::raft_rpc::SyncToResuest>(Arena*);
template<> ::raft_rpc::VoteResuest* Arena::CreateMaybeMessage<::raft_rpc::VoteResuest>(Arena*);
template<> ::raft_rpc::VoteToResponse* Arena::CreateMaybeMessage<::raft_rpc::VoteToResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace raft_rpc {

// ===================================================================

class HeartRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_rpc.HeartRequest) */ {
 public:
  HeartRequest();
  virtual ~HeartRequest();

  HeartRequest(const HeartRequest& from);

  inline HeartRequest& operator=(const HeartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartRequest(HeartRequest&& from) noexcept
    : HeartRequest() {
    *this = ::std::move(from);
  }

  inline HeartRequest& operator=(HeartRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HeartRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartRequest* internal_default_instance() {
    return reinterpret_cast<const HeartRequest*>(
               &_HeartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(HeartRequest* other);
  friend void swap(HeartRequest& a, HeartRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartRequest* New() const final {
    return CreateMaybeMessage<HeartRequest>(nullptr);
  }

  HeartRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartRequest& from);
  void MergeFrom(const HeartRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string msg = 2;
  int msg_size() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg(int index) const;
  ::std::string* mutable_msg(int index);
  void set_msg(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_msg(int index, ::std::string&& value);
  #endif
  void set_msg(int index, const char* value);
  void set_msg(int index, const char* value, size_t size);
  ::std::string* add_msg();
  void add_msg(const ::std::string& value);
  #if LANG_CXX11
  void add_msg(::std::string&& value);
  #endif
  void add_msg(const char* value);
  void add_msg(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& msg() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_msg();

  // required sfixed64 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // optional bool done_msg = 3;
  bool has_done_msg() const;
  void clear_done_msg();
  static const int kDoneMsgFieldNumber = 3;
  bool done_msg() const;
  void set_done_msg(bool value);

  // @@protoc_insertion_point(class_scope:raft_rpc.HeartRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField<::std::string> msg_;
  ::google::protobuf::int64 version_;
  bool done_msg_;
  friend struct ::TableStruct_raft_5frpc_2eproto;
};
// -------------------------------------------------------------------

class HeartResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_rpc.HeartResponse) */ {
 public:
  HeartResponse();
  virtual ~HeartResponse();

  HeartResponse(const HeartResponse& from);

  inline HeartResponse& operator=(const HeartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartResponse(HeartResponse&& from) noexcept
    : HeartResponse() {
    *this = ::std::move(from);
  }

  inline HeartResponse& operator=(HeartResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HeartResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartResponse* internal_default_instance() {
    return reinterpret_cast<const HeartResponse*>(
               &_HeartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(HeartResponse* other);
  friend void swap(HeartResponse& a, HeartResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartResponse* New() const final {
    return CreateMaybeMessage<HeartResponse>(nullptr);
  }

  HeartResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartResponse& from);
  void MergeFrom(const HeartResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sfixed64 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:raft_rpc.HeartResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 version_;
  friend struct ::TableStruct_raft_5frpc_2eproto;
};
// -------------------------------------------------------------------

class VoteResuest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_rpc.VoteResuest) */ {
 public:
  VoteResuest();
  virtual ~VoteResuest();

  VoteResuest(const VoteResuest& from);

  inline VoteResuest& operator=(const VoteResuest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoteResuest(VoteResuest&& from) noexcept
    : VoteResuest() {
    *this = ::std::move(from);
  }

  inline VoteResuest& operator=(VoteResuest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VoteResuest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoteResuest* internal_default_instance() {
    return reinterpret_cast<const VoteResuest*>(
               &_VoteResuest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(VoteResuest* other);
  friend void swap(VoteResuest& a, VoteResuest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoteResuest* New() const final {
    return CreateMaybeMessage<VoteResuest>(nullptr);
  }

  VoteResuest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VoteResuest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VoteResuest& from);
  void MergeFrom(const VoteResuest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoteResuest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:raft_rpc.VoteResuest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_raft_5frpc_2eproto;
};
// -------------------------------------------------------------------

class VoteToResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_rpc.VoteToResponse) */ {
 public:
  VoteToResponse();
  virtual ~VoteToResponse();

  VoteToResponse(const VoteToResponse& from);

  inline VoteToResponse& operator=(const VoteToResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoteToResponse(VoteToResponse&& from) noexcept
    : VoteToResponse() {
    *this = ::std::move(from);
  }

  inline VoteToResponse& operator=(VoteToResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const VoteToResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoteToResponse* internal_default_instance() {
    return reinterpret_cast<const VoteToResponse*>(
               &_VoteToResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(VoteToResponse* other);
  friend void swap(VoteToResponse& a, VoteToResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoteToResponse* New() const final {
    return CreateMaybeMessage<VoteToResponse>(nullptr);
  }

  VoteToResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VoteToResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VoteToResponse& from);
  void MergeFrom(const VoteToResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoteToResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool vote = 1;
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 1;
  bool vote() const;
  void set_vote(bool value);

  // @@protoc_insertion_point(class_scope:raft_rpc.VoteToResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool vote_;
  friend struct ::TableStruct_raft_5frpc_2eproto;
};
// -------------------------------------------------------------------

class SyncToResuest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_rpc.SyncToResuest) */ {
 public:
  SyncToResuest();
  virtual ~SyncToResuest();

  SyncToResuest(const SyncToResuest& from);

  inline SyncToResuest& operator=(const SyncToResuest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncToResuest(SyncToResuest&& from) noexcept
    : SyncToResuest() {
    *this = ::std::move(from);
  }

  inline SyncToResuest& operator=(SyncToResuest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SyncToResuest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncToResuest* internal_default_instance() {
    return reinterpret_cast<const SyncToResuest*>(
               &_SyncToResuest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SyncToResuest* other);
  friend void swap(SyncToResuest& a, SyncToResuest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncToResuest* New() const final {
    return CreateMaybeMessage<SyncToResuest>(nullptr);
  }

  SyncToResuest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SyncToResuest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SyncToResuest& from);
  void MergeFrom(const SyncToResuest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncToResuest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sfixed64 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:raft_rpc.SyncToResuest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 version_;
  friend struct ::TableStruct_raft_5frpc_2eproto;
};
// -------------------------------------------------------------------

class SyncToResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_rpc.SyncToResponse) */ {
 public:
  SyncToResponse();
  virtual ~SyncToResponse();

  SyncToResponse(const SyncToResponse& from);

  inline SyncToResponse& operator=(const SyncToResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncToResponse(SyncToResponse&& from) noexcept
    : SyncToResponse() {
    *this = ::std::move(from);
  }

  inline SyncToResponse& operator=(SyncToResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SyncToResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncToResponse* internal_default_instance() {
    return reinterpret_cast<const SyncToResponse*>(
               &_SyncToResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(SyncToResponse* other);
  friend void swap(SyncToResponse& a, SyncToResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncToResponse* New() const final {
    return CreateMaybeMessage<SyncToResponse>(nullptr);
  }

  SyncToResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SyncToResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SyncToResponse& from);
  void MergeFrom(const SyncToResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncToResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sfixed64 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int64 version() const;
  void set_version(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:raft_rpc.SyncToResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 version_;
  friend struct ::TableStruct_raft_5frpc_2eproto;
};
// ===================================================================

class RaftService_Stub;

class RaftService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline RaftService() {};
 public:
  virtual ~RaftService();

  typedef RaftService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void RpcNodeHeart(::google::protobuf::RpcController* controller,
                       const ::raft_rpc::HeartRequest* request,
                       ::raft_rpc::HeartResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void RpcNodeVote(::google::protobuf::RpcController* controller,
                       const ::raft_rpc::VoteResuest* request,
                       ::raft_rpc::VoteToResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void RpcNodeSync(::google::protobuf::RpcController* controller,
                       const ::raft_rpc::SyncToResuest* request,
                       ::raft_rpc::SyncToResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RaftService);
};

class RaftService_Stub : public RaftService {
 public:
  RaftService_Stub(::google::protobuf::RpcChannel* channel);
  RaftService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~RaftService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements RaftService ------------------------------------------

  void RpcNodeHeart(::google::protobuf::RpcController* controller,
                       const ::raft_rpc::HeartRequest* request,
                       ::raft_rpc::HeartResponse* response,
                       ::google::protobuf::Closure* done);
  void RpcNodeVote(::google::protobuf::RpcController* controller,
                       const ::raft_rpc::VoteResuest* request,
                       ::raft_rpc::VoteToResponse* response,
                       ::google::protobuf::Closure* done);
  void RpcNodeSync(::google::protobuf::RpcController* controller,
                       const ::raft_rpc::SyncToResuest* request,
                       ::raft_rpc::SyncToResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(RaftService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HeartRequest

// required sfixed64 version = 1;
inline bool HeartRequest::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartRequest::clear_version() {
  version_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 HeartRequest::version() const {
  // @@protoc_insertion_point(field_get:raft_rpc.HeartRequest.version)
  return version_;
}
inline void HeartRequest::set_version(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
  // @@protoc_insertion_point(field_set:raft_rpc.HeartRequest.version)
}

// repeated string msg = 2;
inline int HeartRequest::msg_size() const {
  return msg_.size();
}
inline void HeartRequest::clear_msg() {
  msg_.Clear();
}
inline const ::std::string& HeartRequest::msg(int index) const {
  // @@protoc_insertion_point(field_get:raft_rpc.HeartRequest.msg)
  return msg_.Get(index);
}
inline ::std::string* HeartRequest::mutable_msg(int index) {
  // @@protoc_insertion_point(field_mutable:raft_rpc.HeartRequest.msg)
  return msg_.Mutable(index);
}
inline void HeartRequest::set_msg(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:raft_rpc.HeartRequest.msg)
  msg_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void HeartRequest::set_msg(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:raft_rpc.HeartRequest.msg)
  msg_.Mutable(index)->assign(std::move(value));
}
#endif
inline void HeartRequest::set_msg(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  msg_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:raft_rpc.HeartRequest.msg)
}
inline void HeartRequest::set_msg(int index, const char* value, size_t size) {
  msg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:raft_rpc.HeartRequest.msg)
}
inline ::std::string* HeartRequest::add_msg() {
  // @@protoc_insertion_point(field_add_mutable:raft_rpc.HeartRequest.msg)
  return msg_.Add();
}
inline void HeartRequest::add_msg(const ::std::string& value) {
  msg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:raft_rpc.HeartRequest.msg)
}
#if LANG_CXX11
inline void HeartRequest::add_msg(::std::string&& value) {
  msg_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:raft_rpc.HeartRequest.msg)
}
#endif
inline void HeartRequest::add_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  msg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:raft_rpc.HeartRequest.msg)
}
inline void HeartRequest::add_msg(const char* value, size_t size) {
  msg_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:raft_rpc.HeartRequest.msg)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
HeartRequest::msg() const {
  // @@protoc_insertion_point(field_list:raft_rpc.HeartRequest.msg)
  return msg_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
HeartRequest::mutable_msg() {
  // @@protoc_insertion_point(field_mutable_list:raft_rpc.HeartRequest.msg)
  return &msg_;
}

// optional bool done_msg = 3;
inline bool HeartRequest::has_done_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartRequest::clear_done_msg() {
  done_msg_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool HeartRequest::done_msg() const {
  // @@protoc_insertion_point(field_get:raft_rpc.HeartRequest.done_msg)
  return done_msg_;
}
inline void HeartRequest::set_done_msg(bool value) {
  _has_bits_[0] |= 0x00000002u;
  done_msg_ = value;
  // @@protoc_insertion_point(field_set:raft_rpc.HeartRequest.done_msg)
}

// -------------------------------------------------------------------

// HeartResponse

// required sfixed64 version = 1;
inline bool HeartResponse::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartResponse::clear_version() {
  version_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 HeartResponse::version() const {
  // @@protoc_insertion_point(field_get:raft_rpc.HeartResponse.version)
  return version_;
}
inline void HeartResponse::set_version(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
  // @@protoc_insertion_point(field_set:raft_rpc.HeartResponse.version)
}

// -------------------------------------------------------------------

// VoteResuest

// -------------------------------------------------------------------

// VoteToResponse

// required bool vote = 1;
inline bool VoteToResponse::has_vote() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoteToResponse::clear_vote() {
  vote_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool VoteToResponse::vote() const {
  // @@protoc_insertion_point(field_get:raft_rpc.VoteToResponse.vote)
  return vote_;
}
inline void VoteToResponse::set_vote(bool value) {
  _has_bits_[0] |= 0x00000001u;
  vote_ = value;
  // @@protoc_insertion_point(field_set:raft_rpc.VoteToResponse.vote)
}

// -------------------------------------------------------------------

// SyncToResuest

// required sfixed64 version = 1;
inline bool SyncToResuest::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncToResuest::clear_version() {
  version_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 SyncToResuest::version() const {
  // @@protoc_insertion_point(field_get:raft_rpc.SyncToResuest.version)
  return version_;
}
inline void SyncToResuest::set_version(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
  // @@protoc_insertion_point(field_set:raft_rpc.SyncToResuest.version)
}

// -------------------------------------------------------------------

// SyncToResponse

// required sfixed64 version = 1;
inline bool SyncToResponse::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncToResponse::clear_version() {
  version_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 SyncToResponse::version() const {
  // @@protoc_insertion_point(field_get:raft_rpc.SyncToResponse.version)
  return version_;
}
inline void SyncToResponse::set_version(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
  // @@protoc_insertion_point(field_set:raft_rpc.SyncToResponse.version)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace raft_rpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_raft_5frpc_2eproto
